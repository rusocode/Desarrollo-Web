* {
	font-family: monospace;
	font-weight: 100;
	/* font-size: 10px; */
}

body {
	background: radial-gradient(circle, #fff, #bbb);
	padding: 10px;
}

.grid-container {
	background-color: #595959;
	height: 600px;
	border: 3px solid #000;

	display: grid;

	/* Medidas especiales de Grid
	- em: significa «el tamaño de letra de mi elemento padre», osea del font-size.
	- fr: simboliza una fraccion de espacio restante en el grid (es algo parecido al flex-grow). */

	/* Grid Templates *Las celdas sobrantes quedan implicitas */
	grid-template-columns: repeat(3, 1fr);	/* Define la cantidad de columnas */
	grid-template-rows: repeat(3, 1fr);	/* Define la cantidad de filas */

	/* Grid Gap *No se separan de los bordes del contenedor */
	/* grid-column-gap: 5px; /* Separa las celdas entre columnas */
	/* grid-row-gap: 5px;	 /* Separa las celdas entre filas */
	/* grid-gap: 5px;		 /* Separa las celdas entre si */

	/* Grid Implicito y Explicito */
	/* grid-auto-columns: 100px;	/* Le da un tamaño a las columnas implicitas *No cambia su tamaño ya que modificaria las columnas explicitas */
	/* grid-auto-rows: 30px;		/* Le da un tamaño a las filas implicitas */
	/* grid-auto-flow: column;		/* Para que las celdas implicitas se comporten como columnas */
	/* grid-auto-flow: row;			/* Para que las celdas implicitas se comporten como filas */
	/* grid-auto-flow: dense;		/* Rellena los huecos ocasionados por roturas de limites inexistentes */

	/* -Alineacion X para el contenedor */
	/* justify-content: start;			/* Izquierda (valor por defecto) */
	/* justify-content: center;			/* Centro */
	/* justify-content: end;			/* Derecha */
	/* justify-content: space-around;	/* Le da un margen automatico a todas las cajas */
	/* justify-content: space-between;	/* Deja la mayor cantidad de espacio entre cajas */
	/* justify-content: space-evenly;	/* Deja el mismo margen para todas las cajas, a diferencia de space-around 
	que deja el mismo margen a excepcion del primer margen izquierdo y ultimo margen derecho. */
	/* -Alineacion X para las columnas */
	/* justify-items: start;	/*  */
	justify-items: center;	/*  */
	/* justify-items: end;		/*  */
	
	/* -Alineacion Y para el contenedor */
	/* align-content: start;			/*  */
	/* align-content: center;			/*  */
	/* align-content: end;				/*  */
	/* align-content: space-around; 	/*  */
	/* align-content: space-between;	/*  */
	/* -Alineacion Y para las filas */
	/* align-items: stretch;	/*  */
	/* align-items: start;		/*  */
	align-items: center;		/*  */
	/* align-items: end;		/*  */
}

.grid-item {
	background-color: #b3b3b3;
	font-size: 30px;
	border: 1px solid #000;
	padding: 50px;
}

/* Item 1 */
.grid-item:first-child {
	background: violet; /*  */
	
	/* -Asignacion de espacios *Empuja las demas celdas */
	/* grid-column: 1 / 3;	/* Asigna un espacio desde la columa 1 hasta el final de la columna 2 */
	/* grid-row: 1 / 3; 	/* Asigna un espacio desde la fila 1 hasta el final de la fila 2 */

	/* Estos shortshand se pueden reemplazar por...
	grid-column-start: 1;
	grid-column-end: 3;
	grid-row-start: 1;
	grid-row-end: 3; */

	/* -Span *Otra forma de asignar espacios */
	/* grid-column: 1 / span 2; /* Asigna un espacio desde la columa 1 hasta el final de la columna 2 */
	/* grid-row: 1 / span 2; 	/* Asigna un espacio desde la fila 1 hasta el final de la fila 2 */

	/* -Alineacion X para el item */
	justify-self: start; /*  */

	/* -Alineacion Y para el item */
	align-self: start;	/*  */
}

/* Item 3 */
.grid-item:nth-child(3) {
	background: violet;
	
	/* grid-column: 3 / 5; /* Asigna un espacio desde la columa 3 hasta el final de la columna 4 */

	/* En caso de que la celda ocupe un limite que no existe (ej: 7), entonces se crean columnas que no estan
	echas para crearse. */
	/* grid-column: 5 / 7; /*  */
	/* Entonces, ¿Como hago para ocupar esos espacios libres?
	Usando "grid-auto-flow: dense;" */

	justify-self: end;
	align-self: start;
}

.grid-item:nth-child(4) {
	justify-self: end;
	/* order: 2; */
}

.grid-item:nth-child(5) {
	background: lightcoral;
}

.grid-item:nth-child(6) {
	justify-self: start;
}

.grid-item:nth-child(7) {
	background: violet;
	
	/*
	align-self: end; 
	justify-self: start; */

	/* Se puede reemplazar las dos propiedades de alineacion por: */
	place-self: end start; /* Primero align y despues justify */
}

.grid-item:last-child {
	background: violet;
	justify-self: end;
	align-self: end;
}
* {
	font-family: monospace;
	font-weight: 100;
}

/* Flex se maneja con el main axis (eje x) y cross axis (eje y). */

/* Contenedor */
.flex-container {
	background-color: #69c;
	height: 100vh; /* Ocupa todo el alto del viewport (https://devcode.la/tutoriales/unidades-vh-vw-css/) */

	/* Propiedades reservadas para contenedores flexibles... */
	display: flex;

	/* flex-wrap: nowrap; 		/* Sin saltos (valor por defecto) */
	/* flex-wrap: wrap; 		/* Las cajas bajan cuando se cambia la resolucion */
	/* flex-wrap: wrap-reverse; /* Las cajas suben cuando se cambia la resolucion */
	/* Abreviacion para reemplazar flex-direction y flow-wrap en una sola linea */
	/* flex-flow: column wrap;	/* Usarlo en caso de cambiar estas dos propiedades */

	/* -Direcciones */
	/* flex-direction: row;				/* Direccion en fila (valor por defecto) */
	/* flex-direction: column;			/* Direccion en columna */
	/* flex-direction: row-reverse;		/* Rotacion vertical */
	/* flex-direction: column-reverse;	/* Rotacion horizontal */	

	/* -Alineacion X */
	/* justify-content: left;			/* Izquierda (valor por defecto) */
	justify-content: center;			/* Centro */
	/* justify-content: right;			/* Derecha */
	/* justify-content: space-around;	/* Le da un margen automatico a todas las cajas */
	/* justify-content: space-between;	/* Deja la mayor cantidad de espacio entre cajas */
	/* justify-content: space-evenly;	/* Deja el mismo margen para todas las cajas, a diferencia de space-around 
	que deja el mismo margen a excepcion del primer margen izquierdo y ultimo margen derecho. */

	/* -Alineacion Y para UNA LINEA de cajas */
	/* align-items: stretch;	/* Se estira en caso de que no se defina un height para el item (valor por defecto) */
	/* align-items: flex-start;	/* Arriba */ 
	/* align-items: center;		/* Centro */
	/* align-items: flex-end;	/* Abajo */
	/* align-items: baseline;	/* Abajo *Util cuando se usa wrap-reverse */
	/* -Alineacion Y para MAS DE UNA LINEA de cajas */
	/* align-content: stretch; 	/*  */
	/* align-content: flex-start; /*  */
	/* align-content: center; /*  */
	/* align-content: flex-end; /*  */
	/* align-content: baseline; /*  */
}

/* Contenido */
.flex-item {
	background-color: #248;
	color: #fff;
	text-align: center;
	/* min-width: 200px; /* Especifica el minimo de flexibilidad */
	width: 300px; 
	height: 120px; 
	margin: 5px;
	padding-top: 5px;

	/* Reparte el ancho sobrante del contenedor entre todas las cajas */
	flex-grow: 1; /*  */
}

.primera-caja {
	background: red;

	/* Si por ejemplo sobran 300px, entonces 200px van para la caja roja y 100px para la violeta */
	/* flex-grow: 2; /*  */

	/* flex-basis tiene mayor prioridad aunque se coloque antes de width.
	
	Si el ancho de esta caja es mayor a las otras, entonces se empieza a repartir el espacio sobrante 
	cuando todas las cajas alcancen el espacio asignado. */
	flex-basis: 350px;	/*  */
	/* width: 120px; 	/*  */

	/* Decide que espacio va a ceder cada caja. En este caso, la caja cede el doble de espacio que 
	ceden las otras permitiendole a las demas ajustarse.
	
	Es una propiedad que nos permite elegir que caja va a ceder mas espacio cuando no alcance el 
	lugar disponible. */
	flex-shrink: 2; /* Tambien se puede usar el valor .5 para ceder la mitad de la caja y 0 no cede */

	/* En conclusion, flex-grow, flex-basis y flex-shrink trabajan en conjunto. flex-grow reparte el espacio
	sobrante del viewport entre las cajas y flex-shrink cede el espacio de una caja a las demas. */

	/* flex: flex-grow flex-shrink flex-basis; /* Shorthand */

	/* Order: es como el z index, pero en el eje en el que apunta el main axis. En vez de poner el componente
	con mayor z index que otro por encima, este z index lo ubica al final, siempre y cuando el order sea el mas
	alto. */
	/* order: 4; /*  */

}

.ultima-caja {
	background: violet;

	/* Propiedades reservadas para cajas flexibles... */

	/* flex-grow: 1; /* Obtiene el ancho sobrante del viewport */

	/* Margin *Contrario a lo que indica la propiedad */
	/* margin-right: auto;	/* Izquierda */
	/* margin-left: auto;	/* Derecha */
	/* margin: auto;		/* Centro */
	/* margin-bottom: auto; /* Arriba */
	/* margin-top: auto; 	/* Abajo */

	/* -Alineacion Y */
	/* align-self: stretch; /*  */
	/* align-self: flex-start; /*  */
	/* align-self: center; /*  */
	/* align-self: flex-end; /*  */
	/* align-self: baseline; /*  */
}